{
    "sourceFile": "src/plugins/i18n.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1711433116708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711433259830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,25 @@\n-import Vue from 'vue'\n-import VueI18n from 'vue-i18n'\n+async function loadLocales() {\n+  const context = import.meta.globEager('@/locales/**/*.json')\n+  const messages = {}\n \n-// json 파일을 읽어들이기 위한 function\n-const requireLang = require.context(\n-  '@/locales',    // 폴더명 입니다.\n-  true,\n-  /\\.json$/       // 폴더 아래 json 찾기용\n-)\n+  Object.keys(context).forEach((key) => {\n+    const matched = key.match(/([A-Za-z0-9-_]+)\\./i)\n+    if (matched && matched.length > 1) {\n+      const locale = matched[1]\n+      messages[locale] = context[key].default\n+    }\n+  })\n \n-const messages = {}\n-\n-// json file read\n-for (const file of requireLang.keys()) {\n-  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n-\n-  path.reduce((o, s, i) => {\n-    if (o[s]) return o[s]\n-\n-    o[s] = i + 1 === path.length\n-      ? requireLang(file)\n-      : {}\n-\n-    return o[s]\n-  }, messages)\n-\n+  return messages\n }\n\\ No newline at end of file\n \n-Vue.use(VueI18n);\n+loadLocales().then((messages) => {\n+  let i18n = createI18n({\n+    locale: 'ko', // 기본 locale\n+    fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n+    messages, // 다국어 메시지\n+    silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+  })\n \n-const i18n = new VueI18n({\n-  locale: 'ko', // 기본 locale\n-  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n-  messages, // 다국어 메시지\n-  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+  app.use(i18n)\n })\n-\n-export default i18n\n"
                },
                {
                    "date": 1711433266878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import Vue from 'vue'\n+import VueI18n from 'vue-i18n'\n async function loadLocales() {\n   const context = import.meta.globEager('@/locales/**/*.json')\n   const messages = {}\n \n@@ -21,5 +23,5 @@\n     silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n   })\n \n   app.use(i18n)\n-})\n\\ No newline at end of file\n+})\n"
                },
                {
                    "date": 1711433360808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,33 @@\n-import Vue from 'vue'\n-import VueI18n from 'vue-i18n'\n-async function loadLocales() {\n-  const context = import.meta.globEager('@/locales/**/*.json')\n-  const messages = {}\n+import { createApp } from 'vue'\n+import { createI18n } from 'vue-i18n'\n \n-  Object.keys(context).forEach((key) => {\n-    const matched = key.match(/([A-Za-z0-9-_]+)\\./i)\n-    if (matched && matched.length > 1) {\n-      const locale = matched[1]\n-      messages[locale] = context[key].default\n-    }\n-  })\n+// json 파일을 읽어들이기 위한 function\n+const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n-  return messages\n+const messages = {}\n+\n+// json file read\n+for (const file in requireLang) {\n+  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n+\n+  path.reduce((o, s, i) => {\n+    if (o[s]) return o[s]\n+\n+    o[s] = i + 1 === path.length\n+      ? requireLang[file].default\n+      : {}\n+\n+    return o[s]\n+  }, messages)\n }\n \n-loadLocales().then((messages) => {\n-  let i18n = createI18n({\n-    locale: 'ko', // 기본 locale\n-    fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n-    messages, // 다국어 메시지\n-    silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n-  })\n+const i18n = createI18n({\n+  locale: 'ko', // 기본 locale\n+  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n+  messages, // 다국어 메시지\n+  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+})\n \n-  app.use(i18n)\n-})\n+createApp(App).use(i18n).mount('#app')\n+\n+export default i18n\n"
                },
                {
                    "date": 1711433454317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { createApp } from 'vue'\n+import App from './App.vue' // App 컴포넌트 임포트\n import { createI18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n"
                },
                {
                    "date": 1711433652243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createApp } from 'vue'\n+import App from './App.vue' // App 컴포넌트 임포트\n+import { createI18n } from 'vue-i18n'\n+\n+// json 파일을 읽어들이기 위한 function\n+const requireLang = import.meta.globEager('@/locales/**/*.json')\n+\n+const messages = {}\n+\n+// json file read\n+for (const file in requireLang) {\n+  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n+\n+  path.reduce((o, s, i) => {\n+    if (o[s]) return o[s]\n+\n+    o[s] = i + 1 === path.length\n+      ? requireLang[file].default\n+      : {}\n+\n+    return o[s]\n+  }, messages)\n+}\n+\n+const i18n = createI18n({\n+  locale: 'ko', // 기본 locale\n+  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n+  messages, // 다국어 메시지\n+  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+})\n+\n+createApp(App).use(i18n).mount('#app')\n+\n+export default i18n\n"
                },
                {
                    "date": 1711433789098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createApp } from 'vue'\n+import App from '~/src/App.vue' // App 컴포넌트 임포트\n+import { createI18n } from 'vue-i18n'\n+\n+// json 파일을 읽어들이기 위한 function\n+const requireLang = import.meta.globEager('@/locales/**/*.json')\n+\n+const messages = {}\n+\n+// json file read\n+for (const file in requireLang) {\n+  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n+\n+  path.reduce((o, s, i) => {\n+    if (o[s]) return o[s]\n+\n+    o[s] = i + 1 === path.length\n+      ? requireLang[file].default\n+      : {}\n+\n+    return o[s]\n+  }, messages)\n+}\n+\n+const i18n = createI18n({\n+  locale: 'ko', // 기본 locale\n+  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n+  messages, // 다국어 메시지\n+  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+})\n+\n+createApp(App).use(i18n).mount('#app')\n+\n+export default i18n\n"
                },
                {
                    "date": 1711433810181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { createApp } from 'vue'\n-import App from '~/src/App.vue' // App 컴포넌트 임포트\n+import App from '@/App.vue' // App 컴포넌트 임포트\n import { createI18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n@@ -31,72 +31,4 @@\n \n createApp(App).use(i18n).mount('#app')\n \n export default i18n\n-import { createApp } from 'vue'\n-import App from './App.vue' // App 컴포넌트 임포트\n-import { createI18n } from 'vue-i18n'\n-\n-// json 파일을 읽어들이기 위한 function\n-const requireLang = import.meta.globEager('@/locales/**/*.json')\n-\n-const messages = {}\n-\n-// json file read\n-for (const file in requireLang) {\n-  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n-\n-  path.reduce((o, s, i) => {\n-    if (o[s]) return o[s]\n-\n-    o[s] = i + 1 === path.length\n-      ? requireLang[file].default\n-      : {}\n-\n-    return o[s]\n-  }, messages)\n-}\n-\n-const i18n = createI18n({\n-  locale: 'ko', // 기본 locale\n-  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n-  messages, // 다국어 메시지\n-  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n-})\n-\n-createApp(App).use(i18n).mount('#app')\n-\n-export default i18n\n-import { createApp } from 'vue'\n-import App from './App.vue' // App 컴포넌트 임포트\n-import { createI18n } from 'vue-i18n'\n-\n-// json 파일을 읽어들이기 위한 function\n-const requireLang = import.meta.globEager('@/locales/**/*.json')\n-\n-const messages = {}\n-\n-// json file read\n-for (const file in requireLang) {\n-  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n-\n-  path.reduce((o, s, i) => {\n-    if (o[s]) return o[s]\n-\n-    o[s] = i + 1 === path.length\n-      ? requireLang[file].default\n-      : {}\n-\n-    return o[s]\n-  }, messages)\n-}\n-\n-const i18n = createI18n({\n-  locale: 'ko', // 기본 locale\n-  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n-  messages, // 다국어 메시지\n-  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n-})\n-\n-createApp(App).use(i18n).mount('#app')\n-\n-export default i18n\n"
                },
                {
                    "date": 1711433916653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { createI18n } from 'vue-i18n'\n+import { VueI18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711433978402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { VueI18n } from 'vue-i18n'\n+import { vue } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711433984599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createApp } from 'vue'\n+import App from '@/App.vue' // App 컴포넌트 임포트\n+import {  } from 'vue-i18n'\n+\n+// json 파일을 읽어들이기 위한 function\n+const requireLang = import.meta.globEager('@/locales/**/*.json')\n+\n+const messages = {}\n+\n+// json file read\n+for (const file in requireLang) {\n+  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n+\n+  path.reduce((o, s, i) => {\n+    if (o[s]) return o[s]\n+\n+    o[s] = i + 1 === path.length\n+      ? requireLang[file].default\n+      : {}\n+\n+    return o[s]\n+  }, messages)\n+}\n+\n+const i18n = VueI18n({\n+  locale: 'ko', // 기본 locale\n+  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n+  messages, // 다국어 메시지\n+  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+})\n+\n+createApp(App).use(i18n).mount('#app')\n+\n+export default i18n\n"
                },
                {
                    "date": 1711434045362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import {  } from 'vue-i18n'\n+import { CreateVueI18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n@@ -31,38 +31,4 @@\n \n createApp(App).use(i18n).mount('#app')\n \n export default i18n\n-import { createApp } from 'vue'\n-import App from '@/App.vue' // App 컴포넌트 임포트\n-import { vue } from 'vue-i18n'\n-\n-// json 파일을 읽어들이기 위한 function\n-const requireLang = import.meta.globEager('@/locales/**/*.json')\n-\n-const messages = {}\n-\n-// json file read\n-for (const file in requireLang) {\n-  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n-\n-  path.reduce((o, s, i) => {\n-    if (o[s]) return o[s]\n-\n-    o[s] = i + 1 === path.length\n-      ? requireLang[file].default\n-      : {}\n-\n-    return o[s]\n-  }, messages)\n-}\n-\n-const i18n = createI18n({\n-  locale: 'ko', // 기본 locale\n-  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n-  messages, // 다국어 메시지\n-  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n-})\n-\n-createApp(App).use(i18n).mount('#app')\n-\n-export default i18n\n"
                },
                {
                    "date": 1711434050731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { CreateVueI18n } from 'vue-i18n'\n+import { createI18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711434211500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     return o[s]\n   }, messages)\n }\n \n-const i18n = VueI18n({\n+const i18n = createI18n({\n   locale: 'ko', // 기본 locale\n   fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n   messages, // 다국어 메시지\n   silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n"
                },
                {
                    "date": 1711434216596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { createI18n } from 'vue-i18n'\n+import { VueI18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711434263122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { VueI18n } from 'vue-i18n'\n+import { VueI18 } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n@@ -21,9 +21,9 @@\n     return o[s]\n   }, messages)\n }\n \n-const i18n = createI18n({\n+const i18n = VueI18({\n   locale: 'ko', // 기본 locale\n   fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n   messages, // 다국어 메시지\n   silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n"
                },
                {
                    "date": 1711434281550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { VueI18 } from 'vue-i18n'\n+import { create } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711434289514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { create } from 'vue-i18n'\n+import { createi } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711434301105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { createi } from 'vue-i18n'\n+import { i } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711434308285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { createApp } from 'vue'\n import App from '@/App.vue' // App 컴포넌트 임포트\n-import { i18 } from 'vue-i18n'\n+import { i18n } from 'vue-i18n'\n \n // json 파일을 읽어들이기 위한 function\n const requireLang = import.meta.globEager('@/locales/**/*.json')\n \n"
                },
                {
                    "date": 1711434317004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createApp } from 'vue'\n+import App from '@/App.vue' // App 컴포넌트 임포트\n+import { i18n } from 'vue-i18n'\n+\n+// json 파일을 읽어들이기 위한 function\n+const requireLang = import.meta.globEager('@/locales/**/*.json')\n+\n+const messages = {}\n+\n+// json file read\n+for (const file in requireLang) {\n+  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n+\n+  path.reduce((o, s, i) => {\n+    if (o[s]) return o[s]\n+\n+    o[s] = i + 1 === path.length\n+      ? requireLang[file].default\n+      : {}\n+\n+    return o[s]\n+  }, messages)\n+}\n+\n+const Vuei18n = i18n({\n+  locale: 'ko', // 기본 locale\n+  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n+  messages, // 다국어 메시지\n+  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n+})\n+\n+createApp(App).use(i18n).mount('#app')\n+\n+export default i18n\n"
                }
            ],
            "date": 1711433116708,
            "name": "Commit-0",
            "content": "import Vue from 'vue'\nimport VueI18n from 'vue-i18n'\n\n// json 파일을 읽어들이기 위한 function\nconst requireLang = require.context(\n  '@/locales',    // 폴더명 입니다.\n  true,\n  /\\.json$/       // 폴더 아래 json 찾기용\n)\n\nconst messages = {}\n\n// json file read\nfor (const file of requireLang.keys()) {\n  const path = file.replace(/(\\.\\/|\\.json$)/g, '').split('/')  // 폴더 패스\n\n  path.reduce((o, s, i) => {\n    if (o[s]) return o[s]\n\n    o[s] = i + 1 === path.length\n      ? requireLang(file)\n      : {}\n\n    return o[s]\n  }, messages)\n\n}\n\nVue.use(VueI18n);\n\nconst i18n = new VueI18n({\n  locale: 'ko', // 기본 locale\n  fallbackLocale: 'ko', // locale 설정 실패시 사용할 locale\n  messages, // 다국어 메시지\n  silentTranslationWarn: true // 메시지 코드가 없을때 나오는 console 경고 off\n})\n\nexport default i18n"
        }
    ]
}